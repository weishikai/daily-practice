\b 代表着单词的开头或结尾，也就是单词的分界处
.  匹配除了换行符以外的任意字符
*  前边的内容可以连续重复使用任意次以使整个表达式得到匹配
.* 任意数量的不包含换行的字符
\d 匹配一位数字(0，或1，或2，或……)
\s 任意的空白符，包括空格，制表符(Tab)，换行符，中文全角空格等
\w 匹配字母或数字或下划线或汉字等
\d+ 1个或更多连续的数字 而+则匹配重复1次或更多
\b\w{6}\b 匹配刚好6个字符的单词
^  匹配字符串的开始
$  匹配字符串的结束
\  转义字符

*	重复零次或更多次
+	重复一次或更多次
?	重复零次或一次
{n}	重复n次
{n,}	重复n次或更多次
{n,m}	重复n到m次
[aeiou]就匹配任何一个英文元音字母
 
分枝条件
|  0\d{2}-\d{8}|0\d{3}-\d{7}这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8位本地号(如010-12345678)，一种是4位区号，7位本地号(0376-2233445)
\(0\d{2}\)[- ]?\d{8}|0\d{2}[- ]?\d{8}这个表达式匹配3位区号的电话号码，其中区号可以用小括号括起来，也可以不用，区号与本地号间可以用连字号或空格间隔，也可以没有间隔。你可以试试用分枝条件把这个表达式扩展成也支持4位区号的。
\d{5}-\d{4}|\d{5}这个表达式用于匹配美国的邮政编码。美国邮编的规则是5位数字，或者用连字号间隔的9位数字。之所以要给出这个例子是因为它能说明一个问题：使用分枝条件时，要注意各个条件的顺序。如果你把它改成\d{5}|\d{5}-\d{4}的话，那么就只会匹配5位的邮编(以及9位邮编的前5位)。原因是匹配分枝条件时，将会从左到右地测试每个条件，如果满足了某个分枝的话，就不会去再管其它的条件了。
